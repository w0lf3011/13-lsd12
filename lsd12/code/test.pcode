; *** Compiler ***
;
;*** BEGIN yyparse() ***
;*** END yyparse() ***
;*** BEGIN SymbolTable ***
; ... ajout de main dans la table, state = 1, type = 5
; BORDEL56; ....... s->id = main
; ... ajout de addTo dans la table, state = 1, type = 2
; BORDEL56; ....... s->id = addTo
; ... ajout de a dans la table, state = 2, type = 2
; BORDEL56; ....... s->id = a
; ... ajout de b dans la table, state = 2, type = 2
; BORDEL56; ....... s->id = b
; ... ajout de x dans la table, state = 0, type = 2
; BORDEL56; ....... s->id = x
;*** END SymbolTable ***
; * Verification de la specification LSD12 :
;---GPS = tree_id : 12 AT_ROOT LEFT ;---
;---GPS = tree_id : 3 AT_FUNCT LEFT  ;---
;---GPS = tree_id : 5 AT_CORPS LEFT ;---
;---GPS = tree_id : 1 AT_BLOCDECLA LEFT ;---
;---GPS = tree_id : 2 AT_DECLA RIGHT->LEFT ;---
;left ;---
;---GPS = tree_id : 2 AT_DECLA RIGHT->LEFT ;---
;Funct ;---
;---GPS = tree_id : 3 AT_FUNCT LEFT  ;---
;---GPS = tree_id : 5 AT_CORPS LEFT ;---
;---GPS = tree_id : 1 AT_BLOCDECLA NULL NULL ;---
;---GPS = tree_id : 6 AT_IMPLEMENT LEFT ;---
;---GPS = tree_id : 8 AT_INSTRUCTION LEFT ;---
;---GPS = tree_id : 30 AT_RETURN RIGHT ;---
;---GPS = tree_id : 11 AT_PLUS ;---
;---GPS = tree_id : 0 AT_VAR ;---
;---GPS = tree_id : 0 AT_VAR ;---
;---GPS = tree_id : 6 AT_IMPLEMENT LEFT ;---
;---GPS = tree_id : 8 AT_INSTRUCTION RIGHT ;---
;---GPS = tree_id : 8 AT_INSTRUCTION RIGHT ;---
;---GPS = tree_id : 8 AT_INSTRUCTION LEFT ;---
;---GPS = AT_WRITE RIGHT ;---
;---GPS = tree_id : 0 AT_VAR ;---
;---GPS = tree_id : 27 AT_AFFECT RIGHT ;---
;---GPS = tree_id : 37 AT_APPELF ;---
;---GPS = tree_id : 0 AT_VAR ;---
;---GPS = tree_id : 9 AT_NB ;---
;---GPS = tree_id : 27 AT_AFFECT RIGHT ;---
;---GPS = tree_id : 9 AT_NB ;---
; * Fin de la verification de la specification LSD12!
;*** BEGIN computeLocations(..) ***
; ... localisation de a : 5
; ... localisation de b : 6
; ... localisation de x : 0
;*** END computeLocations(..) ***
;*** BEGIN PCodeGeneration ***
define @main
ssp 1
ujp @main_body
define @addTo
ssp 7
ujp @addTo_body
define @addTo_body
; type ret = 2
lda i 0 0
lda i 0 5
ind i
lda i 0 6
ind i
add i
sto i
retf
;at_headfunc
;at_listparam g
;at_listparam d
define @main_body
lda i 0 0
ldc i 2
sto i
lda i 0 0
;calcul diff de profondeur d
mst 0
;calcul nombre para n_par
;test
;test
;test
;test
;test
;generation pcode parametres
lda i 1 0
ind i
ldc i 3
;appel de addTo
cup 2 @addTo
sto i
lda i 0 0
ind i
prin
;at_headfunc
stp
;*** END PCodeGeneration ***
;*** BEGIN Cleaning ***
;*** END Cleaning ***
