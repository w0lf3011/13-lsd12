; *** Compiler ***
;
;*** BEGIN yyparse() ***
;*** END yyparse() ***
;*** BEGIN printTree(..) ***
; [0x1096890] id=AT_ROOT, type=5, ival=0, sval='LSD12', left=0x1096860, right=(nil)
; [0x1096860] id=AT_FUNCT, type=1, ival=0, sval='main', left=0x1096830, right=0x10960d0
; [0x1096830] id=AT_CORPS, type=5, ival=0, sval=NULL, left=0x1096280, right=0x1096800
; [0x1096280] id=AT_BLOCDECLA, type=5, ival=0, sval=NULL, left=0x1096250, right=(nil)
; [0x1096250] id=AT_DECLA, type=2, ival=0, sval=NULL, left=0x1096220, right=0x1096120
; [0x1096220] id=AT_DECLA, type=2, ival=0, sval=NULL, left=0x10961f0, right=0x1096170
; [0x10961f0] id=AT_DECLA, type=2, ival=0, sval=NULL, left=(nil), right=0x10961c0
; [0x10961c0] id=AT_VAR, type=5, ival=0, sval='c', left=(nil), right=(nil)
; [0x1096170] id=AT_VAR, type=5, ival=0, sval='b', left=(nil), right=(nil)
; [0x1096120] id=AT_VAR, type=5, ival=0, sval='a', left=(nil), right=(nil)
; [0x1096800] id=AT_IMPLEMENT, type=5, ival=0, sval=NULL, left=0x10967d0, right=(nil)
; [0x10967d0] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x1096330, right=0x10967a0
; [0x1096330] id=AT_AFFECT, type=5, ival=0, sval=NULL, left=0x10962d0, right=0x1096300
; [0x10962d0] id=AT_VAR, type=5, ival=0, sval='a', left=(nil), right=(nil)
; [0x1096300] id=AT_NB, type=2, ival=1, sval=NULL, left=(nil), right=(nil)
; [0x10967a0] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x10963e0, right=0x1096770
; [0x10963e0] id=AT_AFFECT, type=5, ival=0, sval=NULL, left=0x1096380, right=0x10963b0
; [0x1096380] id=AT_VAR, type=5, ival=0, sval='b', left=(nil), right=(nil)
; [0x10963b0] id=AT_NB, type=2, ival=2, sval=NULL, left=(nil), right=(nil)
; [0x1096770] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x1096460, right=0x1096740
; [0x1096460] id=AT_READ, type=5, ival=0, sval=NULL, left=(nil), right=0x1096430
; [0x1096430] id=AT_VAR, type=5, ival=0, sval='c', left=(nil), right=(nil)
; [0x1096740] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x10964e0, right=0x1096710
; [0x10964e0] id=AT_WRITE, type=5, ival=0, sval=NULL, left=(nil), right=0x10964b0
; [0x10964b0] id=AT_VAR, type=5, ival=0, sval='c', left=(nil), right=(nil)
; [0x1096710] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x1096630, right=0x10966e0
; [0x1096630] id=AT_AFFECT, type=5, ival=0, sval=NULL, left=0x1096530, right=0x1096600
; [0x1096530] id=AT_VAR, type=5, ival=0, sval='c', left=(nil), right=(nil)
; [0x1096600] id=AT_PLUS, type=2, ival=0, sval=NULL, left=0x1096580, right=0x10965d0
; [0x1096580] id=AT_VAR, type=5, ival=0, sval='a', left=(nil), right=(nil)
; [0x10965d0] id=AT_VAR, type=5, ival=0, sval='b', left=(nil), right=(nil)
; [0x10966e0] id=AT_INSTRUCTION, type=5, ival=0, sval=NULL, left=0x10966b0, right=(nil)
; [0x10966b0] id=AT_WRITE, type=5, ival=0, sval=NULL, left=(nil), right=0x1096680
; [0x1096680] id=AT_VAR, type=5, ival=0, sval='c', left=(nil), right=(nil)
; [0x10960d0] id=AT_HEADFUNCT, type=5, ival=0, sval=NULL, left=(nil), right=(nil)
;*** END printTree(..) ***
;*** BEGIN printTreeGraphViz(..) ***
;*** END printTreeGraphViz(..) ***
;*** BEGIN SymbolTable ***
;*** END SymbolTable ***
;*** BEGIN printSymbolTableGraphViz(..)  ***
;*** END printSymbolTableGraphViz(..)  ***
; * Verification de la specification LSD12 :
; * Fin de la verification de la specification LSD12!
;*** BEGIN computeLocations(..) ***
;*** END computeLocations(..) ***
;*** BEGIN SymbolTable ***
;--
; [0x10968c0] Id : id: main address: 0 type: 1 niv: 0 state: 1
;	 Next : 0x1096910, Previous : (nil), down : 0x1096960, up : (nil)
;--
; [0x1096960] Id : id: c address: 0 type: 2 niv: 1 state: 0
;	 Next : 0x10969b0, Previous : (nil), down : (nil), up : 0x10968c0
;--
; [0x10969b0] Id : id: b address: 1 type: 2 niv: 1 state: 0
;	 Next : 0x1096a00, Previous : 0x1096960, down : (nil), up : 0x10968c0
;--
; [0x1096a00] Id : id: a address: 2 type: 2 niv: 1 state: 0
;	 Next : 0x1096a50, Previous : 0x10969b0, down : (nil), up : 0x10968c0
;*** END SymbolTable ***
;*** BEGIN PCodeGeneration ***
define @main
ssp 3
lda i 0 2
ldc i 1
sto i
lda i 0 1
ldc i 2
sto i
lda i 0 0
read
sto i
lda i 0 0
ind i
prin
lda i 0 0
lda i 0 2
ind i
lda i 0 1
ind i
add i
sto i
lda i 0 0
ind i
prin
stp
;*** END PCodeGeneration ***
;*** BEGIN Cleaning ***
;*** END Cleaning ***
