; *** Compiler ***
;
;*** BEGIN yyparse() ***
;*** END yyparse() ***
;*** BEGIN SymbolTable ***
; ... ajout de main dans la table, state = 1, type = 5, fnctId = 1, fnctFor = 0
; ....... s->id = main, s->fnctId = 1
; ....... au niveau 0
; ... ajout de mul dans la table, state = 1, type = 5, fnctId = 1, fnctFor = 0
; ....... s->id = mul, s->fnctId = 1
; ....... au niveau 1
; ... ajout de x dans la table, state = 2, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = x, s->fnctId = 0
; ... ajout de y dans la table, state = 2, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = y, s->fnctId = 0
; ... ajout de acc dans la table, state = 2, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = acc, s->fnctId = 0
; ... ajout de j dans la table, state = 0, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = j, s->fnctId = 0
; ... ajout de i dans la table, state = 0, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = i, s->fnctId = 0
; ... ajout de z dans la table, state = 0, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = z, s->fnctId = 0
; ... ajout de y dans la table, state = 0, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = y, s->fnctId = 0
; ... ajout de x dans la table, state = 0, type = 2, fnctId = 0, fnctFor = 0
; ....... s->id = x, s->fnctId = 0
;*** END SymbolTable ***
; * Verification de la specification LSD12 :
; * Fin de la verification de la specification LSD12!
;*** BEGIN computeLocations(..) ***
; ... localisation de x : 5
; ... localisation de y : 6
; ... localisation de acc : 7
; ... localisation de j : 0
; ... localisation de i : 1
; ... localisation de z : 2
; ... localisation de y : 3
; ... localisation de x : 4
;*** END computeLocations(..) ***
;*** BEGIN PCodeGeneration ***
define @main_0_1
ssp 5
ujp @main_body_0_1
define @mul_1_1
ssp 8
ujp @mul_body_1_1
define @mul_body_1_1
lda i 0 5
ind i
ldc i 1
leq b
fjp @else_20
;reference pcodegenadress
;s->levelNode 2 s->id acc acc 
lda i 0 7
;reference pcodegenadress
;s->levelNode 2 s->id acc acc 
lda i 0 7
ind i
lda i 0 6
ind i
add i
sto i
ujp @fi_20
define @else_20
;reference pcodegenadress
;s->levelNode 2 s->id acc acc 
lda i 0 7
;reference pcodegenadress
;s->levelNode 2 s->id acc acc 
lda i 0 7
ind i
lda i 0 6
ind i
add i
sto i
;calcul diff de profondeur d
mst 1
;generation nombre et pcode parametres
lda i 0 5
ind i
ldc i 1
sub i
lda i 0 6
ind i
; **** appel ref 2 pour var acc, tree = acc
lda i 1 2
;appel de mul_1_1
cup 3 @mul_1_1
define @fi_20
;at_headfunc
;entree listparam
retp
define @main_body_0_1
lda i 0 4
read
sto i
lda i 0 3
read
sto i
lda i 0 2
read
sto i
lda i 0 1
ldc i 0
sto i
lda i 0 0
ldc i 0
sto i
;calcul diff de profondeur d
mst 0
;generation nombre et pcode parametres
lda i 0 4
ind i
lda i 0 3
ind i
; **** appel ref 2 pour var acc, tree = i
lda i 0 1
;appel de mul_1_1
cup 3 @mul_1_1
lda i 0 1
ind i
prin
;calcul diff de profondeur d
mst 0
;generation nombre et pcode parametres
lda i 0 1
ind i
lda i 0 2
ind i
; **** appel ref 2 pour var acc, tree = j
lda i 0 0
;appel de mul_1_1
cup 3 @mul_1_1
lda i 0 0
ind i
prin
;at_headfunc
stp
;*** END PCodeGeneration ***
;*** BEGIN Cleaning ***
;*** END Cleaning ***
